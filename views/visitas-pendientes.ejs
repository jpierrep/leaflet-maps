<!DOCTYPE html>
<html>
<head>
<title>Page Title</title>



<!--

la libreria se carga en label .js 
<link rel="stylesheet" href="https://d19vzq90twjlae.cloudfront.net/leaflet-0.7.2/leaflet.css" />

<script src="https://d19vzq90twjlae.cloudfront.net/leaflet-0.7.2/leaflet.js" charset="utf-8"></script>

 -->
     
     <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.5/css/bootstrap.min.css"/>

     <script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js"></script>
     
     <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.3/umd/popper.min.js" integrity="sha384-ZMP7rVo3mIykV+2+9J3UJ46jBk0WLaUAdn689aCwoqbBJiSnjAK/l8WvCWPIPm49" crossorigin="anonymous"></script>

 

     <script  src="/js/bootstrap-3.3.2.min.js"></script>


     <script type="text/javascript" src='/js/bootstrap-multiselect.js'></script>
     <link  rel="stylesheet" href="/css/bootstrap-multiselect.css"/>
     <link  rel="stylesheet" href="/css/mapa.css"/>
     
     <link href="http://fonts.googleapis.com/css?family=Open+Sans" rel="stylesheet" type="text/css"/>
     <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/css/bootstrap.min.css" integrity="sha384-MCw98/SFnGE8fJT3GXwEOngsV7Zt27NXFoaoApmYm81iuXoPkFOJwJ8ERdknLPMO" crossorigin="anonymous">
     
     
     
<link rel="stylesheet" href="/label/libs/leaflet/leaflet.css" />
<!--[if lte IE 8]><link rel="stylesheet" href="../libs/leaflet/leaflet.ie.css" /><![endif]-->
<link rel="stylesheet" href="/label/dist/leaflet.label.css" />

<script src="/label/libs/leaflet/leaflet-src.js"></script>

<script src="/label/src/Label.js"></script>
<script src="/label/src/BaseMarkerMethods.js"></script>
<script src="/label/src/Marker.Label.js"></script>
<script src="/label/src/CircleMarker.Label.js"></script>
<script src="/label/src/Path.Label.js"></script>
<script src="/label/src/Map.Label.js"></script>
<script src="/label/src/FeatureGroup.Label.js"></script>




<!-- 
debido a que plugin de label ocupa leaflet 0.7 , todas  los plugins deben estar en 0.7
es por ello que las librerias deben bajarse con la version correspondiente
https://github.com/Leaflet/Leaflet.markercluster/tree/leaflet-0.7


-->


<link rel="stylesheet" href="/marker-cluster/dist/MarkerCluster.css" />
<link rel="stylesheet" href="/marker-cluster/dist/MarkerCluster.Default.css" />
<script src="/marker-cluster/dist/leaflet.markercluster-src.js"></script>
<script src="/marker-cluster/dist/leaflet.markercluster.js"></script>


     <style>
         html,
body {
    height: 100%;
    font-size: medium;
}
 /*#mymap{width:1600px;height:800px} */
 #mymap{
 display: inline-block;
  height: 100%;
  width: 100%;

}
.column {
  display: inline;
  padding: 10px;
  height: 100%;


}

.left {
  width: 25%;
}

.right {
  width: 75%;
}

#yellow {
  height: 100%; 
 /*background: yellow; */

}

table{width:100%;}
td{padding:24px; background:#eee;}

/*Para que el header de la tabla sea fijo*/
thead tr:nth-child(1) th{
    background: white;
    position: sticky;
    top: 0;
    z-index: 10;
  }
      
    </style>




     
    
</head>
<body>




<!--
<h1>This is a Heading</h1>
<p>This is a paragraph.</p>
<p><%= JSON.stringify(geoJSON[0]) %></p>
<p><%= infoSupervisor['supervisor_id'] +" - " +infoSupervisor['supervisor_nombre']+" - "+infoSupervisor['supervisor_zona'] %></p>
-->
<h2 style="margin:0;padding: 10px;text-align:center;background-color: black ;color: white;">VISITAS PENDIENTES ULTIMOS 30 DIAS</h2>
<h2 style="margin:0;text-align:center;background-color: black ;color: white;"><%= (infoSupervisor['supervisor_id'] +" - " +infoSupervisor['supervisor_nombre']+" - "+infoSupervisor['supervisor_zona']).toUpperCase()%></h2>

<div class="container-fluid h-100">
    <div class="row justify-content-center h-100">
        <div class="col-4 hidden-md-down " style="overflow-y:auto;" id="yellow">
            <!--<div class="col-4 hidden-md-down" >  -->
          
            <div id="tabla-instalaciones" style=" height: 600px; overflow: auto;" >
                <table class="table table-hover" >
                    <thead>
                      <tr>
                        <th scope="col">CODIGO</th>
                        <th scope="col">INSTALACION</th>
                        <th scope="col">VISITAS PEND.</th>
                        <th scope="col">VISITAS REALIZ.</th>
                        <th scope="col">CUMPL. (%)</th>
                        <th  style="display: none;"scope="col">Longitud</th>
                        <th style="display: none;" scope="col"> Latitud</th>
                       
                      </tr>
                    </thead>
                    <tbody>
                     
                      <% for (var x = 0;x < infoSupervisor['dataNCSupervisor'].length;x++){ %>
                        <tr>
                            <td> <a href="http://192.168.100.16/TouchServer/embed.html##NewLink?arg1=<%=infoSupervisor['dataNCSupervisor'][x]['cencos_codigo']%>"><%=infoSupervisor['dataNCSupervisor'][x]['cencos_codigo']%></a> </td>
                            <td><%=infoSupervisor['dataNCSupervisor'][x]['cencos_nombre']%></td>
                            <td><%=infoSupervisor['dataNCSupervisor'][x]['CANT_VISITAS_PENDIENTES']%></td>
                            <td><%=infoSupervisor['dataNCSupervisor'][x]['CANT_VISITAS_REALIZADAS']%></td>
                            <td><%=parseInt(infoSupervisor['dataNCSupervisor'][x]['CANT_VISITAS_REALIZADAS']
                                /(infoSupervisor['dataNCSupervisor'][x]['CANT_VISITAS_PENDIENTES']+infoSupervisor['dataNCSupervisor'][x]['CANT_VISITAS_REALIZADAS']) *100
                            )
                                %></td>
                            <td style="display: none;"><%=infoSupervisor['dataNCSupervisor'][x]['latitude']%></td>
                            <td style="display: none;"><%=infoSupervisor['dataNCSupervisor'][x]['longitude']%></td>

                          </tr>
                        <% }  %>  
                    </tbody>
                  </table>
                
                </div>
          </div>

      <div class="col-10 col-sm-10 col-md-10 col-lg-8 col-xl-8">
      
        <div id="mymap"></div>
      </div>
    </div>
  </div>

   









<script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.3/umd/popper.min.js" integrity="sha384-ZMP7rVo3mIykV+2+9J3UJ46jBk0WLaUAdn689aCwoqbBJiSnjAK/l8WvCWPIPm49" crossorigin="anonymous"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/js/bootstrap.min.js" integrity="sha384-ChfqqxuZUCnJSK3+MXmPNIyE6ZbWh2IMqE241rYiqJxyMiZ6OW/JmZQ5stwEULTy" crossorigin="anonymous"></script>
</body>


<script src='https://api.tiles.mapbox.com/mapbox.js/plugins/leaflet-omnivore/v0.3.1/leaflet-omnivore.min.js'></script>


<script >
"use strict";








/*
//animacion para mover los registros de la tabla
var $el = $(".table-responsive");
function anim() {
  var st = $el.scrollTop();
  var sb = $el.prop("scrollHeight")-$el.innerHeight();
  $el.animate({scrollTop: st<sb/4 ? sb : 0}, 60000, anim);
}
function stop(){
  $el.stop();
}
anim();
$el.hover(stop, anim);

*/




var getTest =  JSON.parse('<%-JSON.stringify(geoJSON)%>') //var test is now assigned to getTest which will only work on browsers
var infoSupervisor= JSON.parse('<%-JSON.stringify(infoSupervisor)%>') 
var   plantasGeoJSON =  JSON.parse('<%-JSON.stringify(plantasGeoJSON)%>')
           console.log(getTest);  // successfully prints 101 on browser
            console.log("test")
            var mymap = L.map('mymap'
            ,{fullscreenControl: true}
            ).setView([51.505, -0.09], 13);



            mymap.eachLayer(function (layer) {
            mymap.removeLayer(layer)
            }) ; 
 

             L.tileLayer('https://api.mapbox.com/styles/v1/{id}/tiles/{z}/{x}/{y}?access_token={accessToken}', {
             attribution: '© <a href="https://www.mapbox.com/about/maps/">Mapbox</a> © <a href="http://www.openstreetmap.org/copyright">OpenStreetMap</a> <strong><a href="https://www.mapbox.com/map-feedback/" target="_blank">Improve this map</a></strong>',
             maxZoom: 18,
             id: 'mapbox/streets-v11',
             accessToken: 'pk.eyJ1IjoianBpZXJyZXAiLCJhIjoiY2pkcWZxZzh1MHF2YjJ3cWxweWxtOTJ0NyJ9.0Yu1-taeeVUfHfSXBGE-Tg'
            }).addTo(mymap);



     



var baseRadius=8
var maxRadius=30
/*





var customLayerVolumen = L.geoJson(getTest, {
                pointToLayer : function(feature,latlng){
                let radius=0
                  if(feature.properties.DURACION>0){
                    radius=baseRadius+(baseRadius+(maxRadius-baseRadius)*(feature.properties.DURACION-0.25)/(infoSupervisor["max_duracion"]-0.25))
                }
               
                    console.log("hii")
                    //duracion tiene valor 0,121 ej 
                    let duracion_ajust=feature.properties.DURACION
                    if (duracion_ajust>0 &&duracion_ajust<1)
                    duracion_ajust=1
                let geojsonMarkerOptions = {
                    stroke:false,
               // radius: baseRadius+duracion_ajust*1.8,
                radius:radius,
             //   fillColor: colorRadio,
                fillColor:"green",
                color:  'black',
                weight: baseRadius,
                opacity: 0.4,
                fillOpacity: 0.4
              
                };

               // if (feature.properties.CANT_NC_PENDIENTES>5)
               //     geojsonMarkerOptions.fillColor='red'

                return L.circleMarker(latlng, geojsonMarkerOptions);
                }
                //  ,onEachFeature:function(feature,layer){
                   
                 // },
                
               // filter:function(feature,layer){
            //}
                
                
                }).addTo(mymap);

           */     


//////////////// añade multicluster




/*
const markers = L.markerClusterGroup({zoomToBoundsOnClick: false});
//[[-33.588008, -71.6105255],[-33.588008, -71.6105255],[-33.588008, -71.6105255],[-33.588008, -71.6105255],[-33.588008, -71.6105255]]
getTest 
.map(latLng => L.marker(latLng.geometry.coordinates))
  .forEach(marker => markers.addLayer(marker));
mymap.addLayer(markers);

*/



/*
var geoJsonData = {
			"type": "FeatureCollection", 
			"features": [
				{ "type": "Feature", "id":"1", "properties": { "address": "2"   }, "geometry": { "type": "Point", "coordinates": [-33.588008, -71.6105255 ] } },
				{ "type": "Feature", "id":"2", "properties": { "address": "151" }, "geometry": { "type": "Point", "coordinates": [-33.588008, -71.6105255   ] } },
				{ "type": "Feature", "id":"3", "properties": { "address": "21"  }, "geometry": { "type": "Point", "coordinates": [-33.588008, -71.6105255     ] } },
				{ "type": "Feature", "id":"4", "properties": { "address": "14"  }, "geometry": { "type": "Point", "coordinates": [-33.588008, -71.6105255   ] } },
				{ "type": "Feature", "id":"5", "properties": { "address": "38B" }, "geometry": { "type": "Point", "coordinates": [-33.588008, -71.6105255 ] } },
				{ "type": "Feature", "id":"6", "properties": { "address": "38"  }, "geometry": { "type": "Point", "coordinates": [-33.588008, -71.6105255 ] } }
			]
		};

    */ 




		var markers = L.markerClusterGroup();

		var geoJsonLayer = L.geoJson(getTest, {
			onEachFeature: function (feature, layer) {
				layer.bindPopup(feature.properties.fecha_visita_pendiente);
			}
		});
		markers.addLayer(geoJsonLayer);
        mymap.addLayer(markers);


////////////

                var customLayer = L.geoJson(plantasGeoJSON, {
                pointToLayer : function(feature,latlng){
                    console.log("hii") 
                let geojsonMarkerOptions = {
                radius: baseRadius,
             //   fillColor: colorRadio,
                  fillColor:'#00487d',
                color:  '#be1010',
                weight: 1,
                opacity: 1,
                fillOpacity: 0.8
                };

                if (feature.properties.CANT_AUDITORIAS==0){
                    if (feature.properties.CANT_VISITAS>0){
                    geojsonMarkerOptions.fillColor='yellow'
                }else{
                    geojsonMarkerOptions.fillColor='#be1010'
                }
                }

                   

                return L.circleMarker(latlng, geojsonMarkerOptions);
                }
                ,onEachFeature:function(feature,layer){
                    console.log("holaa")  
                    var label=`<p style='font-weight: bold;'>`+feature.properties.cenco2_codi+" "+feature.properties.name+`</p> <p> <br> Supervisor: `   +feature.properties.administrativo_nombre+`</p>`
               // layer.bindPopup(label).openPopup(); 
               layer.bindLabel(feature.properties.cenco2_codi, { noHide: true })   
              }
                
                }).addTo(mymap);
                mymap.fitBounds(customLayer.getBounds());



                let tabledata= []
                $("table tr").each(function(index,tr) {
                tabledata.push($("table tr").eq(index).position())
                

                })
            


loop();


//crea circulos de color
function loop() {
var count=0
var locations=[1]
                $("table tr").each(function(index,tr) {
 console.log("test")
    
    
    setTimeout(function() {

        var longitude=  $(tr).find("td").eq(6).html()  
   var latitude=$(tr).find("td").eq(5).html()          
     var   location = L.circleMarker([latitude,longitude], {radius: 50,color:'black'});
             location.addTo(mymap)
             locations.push(location)
             console.log(locations)
      
      mymap.removeLayer(locations[locations.length-2]);
      // marker2.removeFrom(map)

      $("table tr").eq(index-1).find("td").css('background-color','white')
        $("table tr").eq(index-1).find("td").css('color','black')
      //  $(tr).find("td").css('background-color','white')
     //   $(".testBox").append('<p class="box">' + value + '</p>');
     console.log(tr)
     console.log("hole")
    //var s = $("table tbody > tr:nth-child("+(index+2)+")").position();

     
    //var myFeatureGroup = L.featureGroup().addTo(mymap);
    //console.log(myFeatureGroup.getLayers())
    //myFeatureGroup.clearLayers();
   // mymap.removeLayer(myFeatureGroup) 
    
   // var circlemark = L.circleMarker([latitude,longitude], {radius: 50,color:'green'}).addTo(myFeatureGroup);

   
  
  // var w = $(window);
//w.scrollTop( $(tr).offset().top - (w.height()/3) );



   $(tr).find("td").css('background-color','black')
   $(tr).find("td").css('color','white')


   //var s =$("table tr").eq(index+1).position();
  // var s =$("table tr").eq(index+1).position();

  //aquí se controla la planta visible en el loop
  //var s=tabledata[index-1]
  var s=tabledata[index-2]

   // console.log("table tbody > tr:nth-child("+(index+2)+")",s)
   console.log("Index actual",index)
   console.log("Index",$("table tr").eq(index).position())
   console.log("table aa",$( '#tabla-instalaciones' ).prop("scrollHeight"))
   console.log("tabledata",tabledata)
   //debugger;
  // $( '#tabla-instalaciones' ).scrollTop(300);
if(s){
$( '#tabla-instalaciones' ).scrollTop(s.top);
}

if (index==$("table tr").length-1){
    $("table tr").eq(index).find("td").css('background-color','white')
    $("table tr").eq(index).find("td").css('color','black')
    mymap.removeLayer(locations[locations.length-1]);
    loop();
}

      }, count * 2500)
     //esto se hace acá pues no es asincrono, la funcion se llama automaticamente con todos los tiempos como corresponden
      count++;


  
  });
}


</script>
</html>