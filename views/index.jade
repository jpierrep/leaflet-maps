doctype html 
html(lang='en')
    head
        meta(charset='utf8')
        title Mapa Instalaciones
    
        link(rel="stylesheet" href="https://unpkg.com/leaflet@1.3.1/dist/leaflet.css"
   integrity="sha512-Rksm5RenBEKSKFjgI3a41vrjkw4EVPlJ3+OiI65vTjIdo9brlAacEuKOiQ5OFh7cOI1bkDwLqdLw3Zg0cRJAAQ=="
   crossorigin="")

        script(src="https://unpkg.com/leaflet@1.3.1/dist/leaflet.js"
   integrity="sha512-/Nsx9X4HebavoBvEBuyp3I7od5tA0UzAxs+j83KgC8PU0kgB4XiK4Lfe4y4cgBtaRJQEIFCW+oC506aPT2L1zw=="
   crossorigin="")

        style.
         #mymap{width:1400px;height:700px}

    body
        #mymap
        select(id='cenco1_select' onchange="cambia('cenco1')" )
            option(value="all") TODOS
            each opcion, i in distinctCenco1
                option(value=opcion)  #{opcion}
               // option(value=opcion) Valor #{i}
       
        select(id='supervisor_select' onchange="cambia('supervisor')" )
            option(value="all") TODOS
            each opcion, i in distinctSupervisores
                option(value=opcion)  #{opcion}
               // option(value=opcion) Valor #{i}        
                

       // h1 HOLA #{variable}

    script(src='https://api.tiles.mapbox.com/mapbox.js/plugins/leaflet-omnivore/v0.3.1/leaflet-omnivore.min.js')

    script.
            console.log("#{variable}")
            var mymap = L.map('mymap').setView([51.505, -0.09], 1);
             L.tileLayer('https://api.tiles.mapbox.com/v4/{id}/{z}/{x}/{y}.png?access_token={accessToken}', {
             attribution: 'Map data &copy; <a href="http://openstreetmap.org">OpenStreetMap</a> contributors, <a href="http://creativecommons.org/licenses/by-sa/2.0/">CC-BY-SA</a>, Imagery © <a href="http://mapbox.com">Mapbox</a>',
             maxZoom: 18,
             id: 'mapbox.streets',
             accessToken: 'pk.eyJ1IjoianBpZXJyZXAiLCJhIjoiY2pkcWZxZzh1MHF2YjJ3cWxweWxtOTJ0NyJ9.0Yu1-taeeVUfHfSXBGE-Tg'
            }).addTo(mymap); 


            
            var valor;
             
            function cambia(tipo){

                var cantDotVigenteTotal=0;
                var cantDotVigenteParcial=0;
                var cantPlantas=0;



                /*var sum = [1, 2, 3].reduce((a, b) => a + b, 0);
                console.log(sum); // 6

                var arr = [{x:1},{x:2},{x:4}];

                arr.reduce(function (a, b) {
                return {x: a.x + b.x};
                });*/
                
                var dataResult=JSON.parse('!{dataResult}');
                //cantDotVigenteTotal= dataResult.reduce((a,b)=>{
                        
                         //a trae el valor acumulado y b trae el objeto actual
                //    return {cotiza_dot_vigente_erp: a.cotiza_dot_vigente_erp+b.cotiza_dot_vigente_erp};
                //});

                //funcionando trae suma de un objeto
                //var sum= dataResult.reduce((a,b)=>{
                //    return {cotiza_dot_vigente_erp: a.cotiza_dot_vigente_erp+b.cotiza_dot_vigente_erp}
                //});
                //console.log(sum);
                //console.log(dataResult);
                var valor;
                if (tipo=='supervisor'){
                     valor = document.getElementById("supervisor_select").value;
                     document.getElementById("cenco1_select").value="all"

                    //si es distinto all se obtiene la cantidad de personal en base al filtro, pero si es all se debe sumar todo                  
                     if(valor!='all'){
                        cantDotVigenteTotal= dataResult.reduce((a,b)=>{
                        
                         //a trae el valor acumulado y b trae el objeto actual
                        if( b.administrativo_nombre && b.administrativo_nombre==valor )
                            return {cotiza_dot_vigente_erp: a.cotiza_dot_vigente_erp+b.cotiza_dot_vigente_erp};
                        else 
                            return{cotiza_dot_vigente_erp: a.cotiza_dot_vigente_erp};
                        });

                     }else{
                    //funcionando trae suma de un objeto
                        cantDotVigenteTotal= dataResult.reduce((a,b)=>{
                        return {cotiza_dot_vigente_erp: a.cotiza_dot_vigente_erp+b.cotiza_dot_vigente_erp}
                        });
                     }


                    
                    
                 }
                if(tipo=='cenco1'){
                     valor = document.getElementById("cenco1_select").value;
                      document.getElementById("supervisor_select").value="all"
                                          //si es distinto all se obtiene la cantidad de personal en base al filtro, pero si es all se debe sumar todo                  
                     if(valor!='all'){
                        cantDotVigenteTotal= dataResult.reduce((a,b)=>{
                        
                         //a trae el valor acumulado y b trae el objeto actual
                        if( b.cenco1_desc && b.cenco1_desc==valor )
                            return {cotiza_dot_vigente_erp: a.cotiza_dot_vigente_erp+b.cotiza_dot_vigente_erp};
                        else 
                            return{cotiza_dot_vigente_erp: a.cotiza_dot_vigente_erp};
                        });

                     }else{
                    //funcionando trae suma de un objeto
                        cantDotVigenteTotal= dataResult.reduce((a,b)=>{
                        return {cotiza_dot_vigente_erp: a.cotiza_dot_vigente_erp+b.cotiza_dot_vigente_erp}
                        });
                     }

                      
                }
                console.log(tipo);
                console.log(valor);

                
                console.log(valor)
                console.log("el valor");

               

  
             mymap.eachLayer(function (layer) {
            mymap.removeLayer(layer)
            }) ; 
 
            L.tileLayer('https://api.tiles.mapbox.com/v4/{id}/{z}/{x}/{y}.png?access_token={accessToken}', {
            attribution: 'Map data &copy; <a href="http://openstreetmap.org">OpenStreetMap</a> contributors, <a href="http://creativecommons.org/licenses/by-sa/2.0/">CC-BY-SA</a>, Imagery © <a href="http://mapbox.com">Mapbox</a>',
            maxZoom: 18,
            id: 'mapbox.streets',
            accessToken: 'pk.eyJ1IjoianBpZXJyZXAiLCJhIjoiY2pkcWZxZzh1MHF2YjJ3cWxweWxtOTJ0NyJ9.0Yu1-taeeVUfHfSXBGE-Tg'
            }).addTo(mymap);
            /*
            var geojsonFeature = [{
            "type": "Feature",
            "properties": {
            "name": "Coors Field",
            "amenity": "Baseball Stadium",
            "popupContent": "This is where the Rockies play!",
            "Group":"a"
            },
            "geometry": {
            "type": "Point",
            "coordinates": [-71.99404, 39.75621]
            }
            },
            {
            "type": "Feature",
            "properties": {
            "name": "Coors Field",
            "amenity": "Baseball Stadium",
            "popupContent": "This is where the Rockies play!",
            "Group":"a"
            },
            "geometry": {
            "type": "Point",
            "coordinates": [41.69861,-72.724141]
            }
            }]; */

            var geojsonFeature=JSON.parse('!{geoJSON}');

            // console.log(omnivore.csv('file:///C:/Users/jpierre/Documents/Leaflet-maps/leaflet-maps/views/data.csv', null, customLayer))
            //var csv='a,Trinity College,https://www.edx.org/sites/default/files/trinity1.jpg,"Not in the link <a href=""http://www.trincoll.edu"" target=""_blank"">view website</a> more not in the link","300 Summit St, Hartford CT 06106",0.0,0.0,"300 SUMMIT ST, HARTFORD, CT, 06106",Exact,US Census';
            
            var customLayer = L.geoJson(geojsonFeature, {
                pointToLayer : function(feature,latlng){
                console.log("holaa")   
                console.log(feature)

                let featureDotacion=0;
                //si tiene dotacion vigente se captura el dato para luego hacer la funcion 
                // de calculo del radio en base al valor total
                if (feature.properties && feature.properties.dotacion_vigente) 
                    featureDotacion=feature.properties.dotacion_vigente;
                let valorRadio=0;
                //para no obtener 0/0 y nos de error
                if  (featureDotacion!=0&&cantDotVigenteTotal.cotiza_dot_vigente_erp!=0)
                    valorRadio=featureDotacion/cantDotVigenteTotal.cotiza_dot_vigente_erp

                console.log(featureDotacion)
                console.log(cantDotVigenteTotal.cotiza_dot_vigente_erp)
                let geojsonMarkerOptions = {
                radius: 8+(20*(valorRadio)),
                fillColor: "#ff7800",
                color: "#000",
                weight: 1,
                opacity: 1,
                fillOpacity: 0.8
                };

                return L.circleMarker(latlng, geojsonMarkerOptions);
                },
                filter:function(feature,layer){
                if(valor!='all' &&tipo=='cenco1'){
                    
                return feature.properties.cenco1_desc==valor;

                }else if(valor!='all' &&tipo=='supervisor'){
                    
                return feature.properties.administrativo_nombre==valor;                
                
                }else{
                    return true;
                }
                },onEachFeature:function(feature,layer){
                if (feature.properties && feature.properties.name) {
                layer.bindPopup(feature.properties.name).openPopup();
                }   
                }
                }).addTo(mymap);

            mymap.fitBounds(customLayer.getBounds());
             
             
             /*var runLayer = omnivore.csv(csv, null, customLayer)
            .on('ready', function() {
            // http://leafletjs.com/reference.html#map-fitbounds
            mymap.fitBounds(runLayer.getBounds());
            }).addTo(mymap);
            console.log("Listo");*/
            
            }